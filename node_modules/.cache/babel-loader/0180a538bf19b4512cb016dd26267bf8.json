{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\FormikAssignment\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n\n      if (!values.email) {\n        errors.email = \"Field required\";\n      } else if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(values.email)) {\n        errors.email = \"Username should be an email\";\n      }\n\n      ;\n      if (!values.password) errors.password = \"Field required\";\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailField\",\n        type: \"text\",\n        name: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 8\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          collor: \"red\"\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pswField\",\n        type: \"text\",\n        name: \"password\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Travis/FormikAssignment/src/App.js"],"names":["React","useFormik","App","formik","initialValues","email","password","onSubmit","values","alert","validate","errors","test","handleSubmit","handleChange","collor","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAAyB,QAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADQ;AAKvBC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,KAPsB;AAQvBC,IAAAA,QAAQ,EAAGF,MAAD,IAAY;AACpB,UAAIG,MAAM,GAAG,EAAb;;AACA,UAAG,CAACH,MAAM,CAACH,KAAX,EAAiB;AACfM,QAAAA,MAAM,CAACN,KAAP,GAAc,gBAAd;AACA,OAFF,MAEO,IAAG,CAAC,0JAA0JO,IAA1J,CAA+JJ,MAAM,CAACH,KAAtK,CAAJ,EAAiL;AACxLM,QAAAA,MAAM,CAACN,KAAP,GAAe,6BAAf;AACC;;AAAA;AACD,UAAI,CAACG,MAAM,CAACF,QAAZ,EAAsBK,MAAM,CAACL,QAAP,GAAkB,gBAAlB;AACtB,aAAOK,MAAP;AACD;AAjBsB,GAAD,CAAxB;AAoBA,sBACE;AAAA,2BACC;AAAM,MAAA,QAAQ,EAAER,MAAM,CAACU,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACG,QAAA,EAAE,EAAC,YADN;AAEG,QAAA,IAAI,EAAC,MAFR;AAGG,QAAA,IAAI,EAAC,OAHR;AAIG,QAAA,QAAQ,EAAEV,MAAM,CAACW,YAJpB;AAKG,QAAA,KAAK,EAAEX,MAAM,CAACK,MAAP,CAAcH;AALxB;AAAA;AAAA;AAAA;AAAA,cAFF,EASIF,MAAM,CAACQ,MAAP,CAAcN,KAAd,gBACC;AAAK,QAAA,EAAE,EAAC,YAAR;AAAqB,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE;AAAV,SAA5B;AAAA,kBACGZ,MAAM,CAACQ,MAAP,CAAcN;AADjB;AAAA;AAAA;AAAA;AAAA,cADD,GAIE,IAbN,eAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdH,eAeG;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAEF,MAAM,CAACW,YAJnB;AAKE,QAAA,KAAK,EAAEX,MAAM,CAACK,MAAP,CAAcF;AALvB;AAAA;AAAA;AAAA;AAAA,cAfH,eAsBG;AAAA;AAAA;AAAA;AAAA,cAtBH,EAuBIH,MAAM,CAACQ,MAAP,CAAcL,QAAd,gBACC;AAAK,QAAA,EAAE,EAAC,UAAR;AAAmB,QAAA,KAAK,EAAE;AAAEU,UAAAA,KAAK,EAAE;AAAT,SAA1B;AAAA,kBACGb,MAAM,CAACQ,MAAP,CAAcL;AADjB;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IA3BP,eA4BG;AAAA;AAAA;AAAA;AAAA,cA5BH,eA6BG;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BH;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA1DQJ,G;UACQD,S;;;KADRC,G;AA4DT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { useFormik} from \"formik\";\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      alert(\"Login Successful\");\n    },\n    validate: (values) => {\n      let errors = {};\n      if(!values.email){\n        errors.email= \"Field required\"\n       }else if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(values.email)){\n      errors.email = \"Username should be an email\"\n      };\n      if (!values.password) errors.password = \"Field required\";\n      return errors;\n    },\n  });\n\n  return (\n    <div>\n     <form onSubmit={formik.handleSubmit}>\n       <div>Email:</div>\n       <input\n          id=\"emailField\"\n          type=\"text\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        {formik.errors.email ? (\n          <div id=\"emailError\" style={{ collor: \"red\" }}>\n            {formik.errors.email}\n          </div>\n        ): null}\n        <div>Password:</div>\n        <input\n          id=\"pswField\"\n          type=\"text\"\n          name=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        <br/>\n        {formik.errors.password ? (\n          <div id=\"pswError\" style={{ color: \"red\" }}>\n            {formik.errors.password}\n          </div>\n        ) : null}\n        <br/>\n        <button id=\"submitBtn\" type=\"submit\">\n          Submit\n        </button>\n     </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}